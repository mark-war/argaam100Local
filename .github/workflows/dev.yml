name: CI/CD Workflow

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Load environment variables from GitHub Secrets
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> $GITHUB_ENV
          echo "VITE_APP_LOGIN_URL=${{ secrets.VITE_APP_LOGIN_URL }}" >> $GITHUB_ENV
          echo "VITE_APP_LOGOUT_URL=${{ secrets.VITE_APP_LOGOUT_URL }}" >> $GITHUB_ENV
          echo "VITE_APP_REGISTER_URL=${{ secrets.VITE_APP_REGISTER_URL }}" >> $GITHUB_ENV
          echo "VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}" >> $GITHUB_ENV
          echo "VITE_CHARTS_API_URL=${{ secrets.VITE_CHARTS_API_URL }}" >> $GITHUB_ENV
          echo "VITE_CHARTS_URL=${{ secrets.VITE_CHARTS_URL }}" >> $GITHUB_ENV
          echo "VITE_DECIMALS=${{ secrets.VITE_DECIMALS }}" >> $GITHUB_ENV
          echo "VITE_DEFAULT_LANGUAGE=${{ secrets.VITE_DEFAULT_LANGUAGE }}" >> $GITHUB_ENV
          echo "VITE_DEFAULT_MARKETID=${{ secrets.VITE_DEFAULT_MARKETID }}" >> $GITHUB_ENV
          echo "VITE_EXPIRATION_IN_MINUTES=${{ secrets.VITE_EXPIRATION_IN_MINUTES }}" >> $GITHUB_ENV
          echo "VITE_FREEPAGEID=${{ secrets.VITE_FREEPAGEID }}" >> $GITHUB_ENV
          echo "VITE_FREEPAGESUBID=${{ secrets.VITE_FREEPAGESUBID }}" >> $GITHUB_ENV
          echo "VITE_PE_FIELDIDS=${{ secrets.VITE_PE_FIELDIDS }}" >> $GITHUB_ENV
          echo "VITE_REFRESH_ONRELOAD=${{ secrets.VITE_REFRESH_ONRELOAD }}" >> $GITHUB_ENV
          echo "VITE_SCREEENER_TABLE_ITEMS_PER_PAGE=${{ secrets.VITE_SCREEENER_TABLE_ITEMS_PER_PAGE }}" >> $GITHUB_ENV
          echo "VITE_SUPPORTED_LANGUAGES=${{ secrets.VITE_SUPPORTED_LANGUAGES }}" >> $GITHUB_ENV

      - name: Debug Environment Variables (Length Only)
        run: |
          echo "VITE_API_URL length: ${#VITE_API_URL}"
          echo "VITE_APP_LOGIN_URL length: ${#VITE_APP_LOGIN_URL}"
          echo "VITE_APP_LOGOUT_URL length: ${#VITE_APP_LOGOUT_URL}"
          echo "VITE_APP_REGISTER_URL length: ${#VITE_APP_REGISTER_URL}"
          echo "VITE_BASE_URL length: ${#VITE_BASE_URL}"
          echo "VITE_CHARTS_API_URL length: ${#VITE_CHARTS_API_URL}"
          echo "VITE_CHARTS_URL length: ${#VITE_CHARTS_URL}"
          echo "VITE_DECIMALS length: ${#VITE_DECIMALS}"
          echo "VITE_DEFAULT_LANGUAGE length: ${#VITE_DEFAULT_LANGUAGE}"
          echo "VITE_DEFAULT_MARKETID length: ${#VITE_DEFAULT_MARKETID}"
          echo "VITE_EXPIRATION_IN_MINUTES length: ${#VITE_EXPIRATION_IN_MINUTES}"
          echo "VITE_FREEPAGEID length: ${#VITE_FREEPAGEID}"
          echo "VITE_FREEPAGESUBID length: ${#VITE_FREEPAGESUBID}"
          echo "VITE_PE_FIELDIDS length: ${#VITE_PE_FIELDIDS}"
          echo "VITE_REFRESH_ONRELOAD length: ${#VITE_REFRESH_ONRELOAD}"
          echo "VITE_SCREEENER_TABLE_ITEMS_PER_PAGE length: ${#VITE_SCREEENER_TABLE_ITEMS_PER_PAGE}"
          echo "VITE_SUPPORTED_LANGUAGES length: ${#VITE_SUPPORTED_LANGUAGES}"
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Copy files to local destination
        shell: powershell
        run: |
          $destinationPath = "C:\inetpub\wwwroot\argaam100\dist"

          # Check if destination directory exists
          if (-Not (Test-Path -Path $destinationPath)) {
            Write-Host "Destination directory does not exist, creating..."
            New-Item -ItemType Directory -Path $destinationPath
          }

          # Copy the build contents to the destination directory
          Copy-Item -Path "dist\*" -Destination $destinationPath -Recurse -Force
          Write-Host "Files copied to $destinationPath"
